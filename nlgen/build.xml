<project name="NLGen" default="dist" basedir=".">
    <description>
      NLGen project: https://code.launchpad.net/~nlgen-dev/
    </description>

  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="bin"/>
  <property name="dist"  location="dist"/>
  <property name="build.fork"  value="yes"/>
  <property name="lib.dir" value="lib"/>
  <property name="data.dir" value="data"/>

  <property name="corpus.file" value="embodiment.corpus"/>
  <property name="server.port" value="5555"/>


  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>
  
  <!-- Build classpath -->
  <path id="classpath">
    <pathelement location="${classes.dir}"/>
    <fileset dir="${lib.dir}/" includes="**/*.jar"/>
    <pathelement path="${dist}/nlgen.jar"/>
  </path>
  
  <target name="compile" depends="init" description="Compile the source" >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="." 
           destdir="${build}"
           classpathref="classpath"
           includes="src/com/novamente/nlgen/** src/org/jvnet/inflector/**"
           excludes=""
           listfiles="yes"
	         compiler="modern"
	         fork="${build.fork}"
           debug="true">
    </javac>
  </target>
  
  <target name="dist" depends="compile" description="Generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

  <jar destfile="${dist}/nlgen.jar"
       basedir="${build}/"
       includes="com/novamente/nlgen/** org/jvnet/inflector/**"
  />
  </target>

  <target name="clean" description="Clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>


  <target name="parse-corpus-syntax" description="Extract the syntax structure from the corpus file" >
    <java classname="com.novamente.nlgen.parse.CorpusParsers" failonerror="true" fork="yes">
      <classpath refid="classpath"/>
      <jvmarg line="-Xmx1024m"/>
      <jvmarg line="-Djava.library.path=/usr/lib:/usr/local/lib"/>
      <jvmarg line="-Dwordnet.configfile=config/file_properties.xml"/>
      <arg line="-fileIn ${data.dir}/${corpus.file} -fileOut ${dist}/${corpus.file}.syntax.xml -func Syntax"/>
    </java>
  </target>

  <target name="parse-corpus-semantic" description="Extract the semantic structure from the corpus file" >
    <java classname="com.novamente.nlgen.parse.CorpusParsers" failonerror="true" fork="yes">
      <classpath refid="classpath"/>
      <jvmarg line="-Xmx1024m"/>
      <jvmarg line="-Djava.library.path=/usr/lib:/usr/local/lib"/>
      <jvmarg line="-Dwordnet.configfile=config/file_properties.xml"/>
      <arg line="-fileIn ${data.dir}/${corpus.file} -fileOut ${dist}/${corpus.file}.semantic.xml -func Semantic"/>
    </java>
  </target>

  <!-- run nlgen in server mode -->
  <target name="server" depends="dist,parse-corpus-semantic,parse-corpus-syntax" description="Run NLgen using the files generated by the corpus file (property 'corpus.file'). You can put your custom.corpus file into the 'data' dir and use the -D to override this property. i.e. ant server -Dcorpus.file=trivial.corpus">
    <java classname="com.novamente.nlgen.Server" failonerror="true" fork="yes">
      <jvmarg line="-Xmx1024m"/>
      <jvmarg line="-Djava.library.path=/usr/lib:/usr/local/lib"/>
      <jvmarg line="-Dwordnet.configfile=config/file_properties.xml"/>
      <jvmarg line="-DSERVER_PORT=${server.port}"/>
      <classpath refid="classpath"/>
      <arg line="-relExRelationsFilePath ${dist}/${corpus.file}.semantic.xml -linksFilePath ${dist}/${corpus.file}.syntax.xml"/>
    </java>
  </target>
  

</project>

